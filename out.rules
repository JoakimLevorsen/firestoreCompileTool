rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{user} {
      allow read: if (request.auth != null ? request.auth.uid : null) == user;
      allow create, update: if (
        ((request.auth != null ? request.auth.uid : null) == user) 
        && (request.resource.data.keys().hasAll(['avatar']) 
          && request.resource.data.keys().hasOnly(['avatar','displayName'])
          && (
            (request.resource.data.avatar.keys().hasAll(['color','animal']) 
              && request.resource.data.avatar.keys().hasOnly(['color','animal'])
              && (request.resource.data.avatar.color is string)
          && (request.resource.data.avatar.animal is string)))
          && (
            (!('displayName' in request.resource.data) 
      || request.resource.data.displayName is string))));
    }
    match /mainStage/{eventID} {
      allow read: if (request.auth != null ? request.auth : null) != null;
      match /chat/{message} {
        allow read: if (request.auth != null ? request.auth : null) != null;
        allow create: if (
          (request.auth != null ? request.auth : null) != null 
          && request.resource.data.keys().hasAll(['content','date','displayName','avatar']) 
          && request.resource.data.keys().hasOnly(['content','date','displayName','avatar'])
          && (request.resource.data.content is string)
          && (request.resource.data.date is timestamp)
          && (request.resource.data.displayName is string)
          && (
            (request.resource.data.avatar.keys().hasAll(['color','animal']) 
              && request.resource.data.avatar.keys().hasOnly(['color','animal'])
              && (request.resource.data.avatar.color is string)
        && (request.resource.data.avatar.animal is string))));
      }
    }
    match /mainStageStatic/{item} {
      allow read: if (request.auth != null ? request.auth : null) != null;
    }
    match /lounges/{lounge} {
      allow read: if (request.auth != null ? request.auth : null) != null;
      allow update: if (
        (((request.auth != null ? request.auth : null) != null 
            && request.resource.data.keys().hasAll(['title','imgUrl','lastMessage','sortOrder']) 
            && request.resource.data.keys().hasOnly(['title','imgUrl','lastMessage','sortOrder'])
            && (request.resource.data.title is string)
            && (request.resource.data.imgUrl is string)
            && (request.resource.data.lastMessage is timestamp)
        && (request.resource.data.sortOrder is number))) 
        && (
          ((("title" in request.resource.data ? request.resource.data.title : null) == ("title" in resource.data ? resource.data.title : null) 
            && ("icon" in request.resource.data ? request.resource.data.icon : null) == ("icon" in resource.data ? resource.data.icon : null)) 
      && ("sortOrder" in request.resource.data ? request.resource.data.sortOrder : null) == ("sortOrder" in resource.data ? resource.data.sortOrder : null))));
      match /topics/{topic} {
        allow read: if (request.auth != null ? request.auth : null) != null;
        allow create: if (
          (request.auth != null ? request.auth : null) != null 
          && request.resource.data.keys().hasAll(['title','description','lastMessage','messageCount']) 
          && request.resource.data.keys().hasOnly(['title','description','lastMessage','messageCount'])
          && (request.resource.data.title is string)
          && (request.resource.data.description is string)
          && (request.resource.data.lastMessage is timestamp)
        && (request.resource.data.messageCount is number));
        allow update: if (
          (((request.auth != null ? request.auth : null) != null 
              && request.resource.data.keys().hasAll(['title','description','lastMessage','messageCount']) 
              && request.resource.data.keys().hasOnly(['title','description','lastMessage','messageCount'])
              && (request.resource.data.title is string)
              && (request.resource.data.description is string)
              && (request.resource.data.lastMessage is timestamp)
          && (request.resource.data.messageCount is number))) 
          && (
            (("title" in request.resource.data ? request.resource.data.title : null) == ("title" in resource.data ? resource.data.title : null) 
        && ("description" in request.resource.data ? request.resource.data.description : null) == ("description" in resource.data ? resource.data.description : null))));
        match /chat/{message} {
          allow read: if (request.auth != null ? request.auth : null) != null;
          allow create: if (
            (request.auth != null ? request.auth : null) != null 
            && request.resource.data.keys().hasAll(['content','date','displayName','avatar']) 
            && request.resource.data.keys().hasOnly(['content','date','displayName','avatar'])
            && (request.resource.data.content is string)
            && (request.resource.data.date is timestamp)
            && (request.resource.data.displayName is string)
            && (
              (request.resource.data.avatar.keys().hasAll(['color','animal']) 
                && request.resource.data.avatar.keys().hasOnly(['color','animal'])
                && (request.resource.data.avatar.color is string)
          && (request.resource.data.avatar.animal is string))));
        }
      }
    }
    match /boothTags/{tag} {
      allow read: if (request.auth != null ? request.auth : null) != null;
    }
    match /booths/{booth} {
      allow read: if (request.auth != null ? request.auth : null) != null;
    }
    match /emailSignup/{signUp} {
      allow create: if (
        ((request.resource.data.keys().hasAll(['email','signUpTime','firstName','lastName','wantsUpdates','uid']) 
            && request.resource.data.keys().hasOnly(['email','signUpTime','firstName','lastName','wantsUpdates','uid'])
            && (request.resource.data.email is string)
            && (request.resource.data.signUpTime is timestamp)
            && (request.resource.data.firstName is string)
            && (request.resource.data.lastName is string)
            && (request.resource.data.wantsUpdates is bool)
            && (request.resource.data.uid is string) 
        && (request.auth != null ? request.auth.uid : null) == ("uid" in request.resource.data ? request.resource.data.uid : null))) 
        && (
      ("email" in request.resource.data ? request.resource.data.email : null) == signUp));
    }
  }
}
